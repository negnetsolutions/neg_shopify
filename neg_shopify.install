<?php

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\neg_shopify\Settings;

/**
 * Adds "shopify_product.is_available"
 */
function neg_shopify_update_8702(&$sandbox) {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $entity_type = $definition_update_manager->getEntityType('shopify_product');
  $last_installed_schema_repository = \Drupal::service('entity.last_installed_schema.repository');
  $field_storage_definitions = $last_installed_schema_repository->getLastInstalledFieldStorageDefinitions('shopify_product');

  $field_storage_definitions['is_available'] = BaseFieldDefinition::create('boolean')
    ->setName('is_available')
    ->setLabel(t('Available for Sale'))
    ->setDefaultValue(FALSE)
    ->setTargetEntityTypeId('shopify_product')
    ->setTargetBundle(NULL)
    ->setReadOnly(TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->updateFieldableEntityType($entity_type, $field_storage_definitions, $sandbox);

  return t('Add shopify_product.is_available');
}

/**
 * Adds "shopify_product.low_price"
 */
function neg_shopify_update_8703(&$sandbox) {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $entity_type = $definition_update_manager->getEntityType('shopify_product');
  $last_installed_schema_repository = \Drupal::service('entity.last_installed_schema.repository');
  $field_storage_definitions = $last_installed_schema_repository->getLastInstalledFieldStorageDefinitions('shopify_product');

  $field_storage_definitions['low_price'] = BaseFieldDefinition::create('decimal')
    ->setName('low_price')
    ->setTargetEntityTypeId('shopify_product')
    ->setTargetBundle(NULL)
    ->setLabel(t('Low Price'))
    ->setReadOnly(TRUE)
    ->setSettings([
      'precision' => 10,
      'scale' => 2,
    ])
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'shopify_price',
      'weight' => -4,
    ])
    ->setDisplayOptions('form', [
      'type' => 'number',
      'weight' => -4,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->updateFieldableEntityType($entity_type, $field_storage_definitions, $sandbox);

  return t('Added shopify_product.low_price');
}

/**
 * Adds "shopify_product.is_preorder"
 */
function neg_shopify_update_8711(&$sandbox) {
  return t('Added shopify_product.is_preorder');
}

/**
 * Adds "shopify_product blank"
 */
function neg_shopify_update_8712(&$sandbox) {
  return t('shopify_product blank');
}

/**
 * Adds "shopify_vendors table"
 */
function neg_shopify_update_8713(&$sandbox) {
    \Drupal::entityTypeManager()->clearCachedDefinitions();
    \Drupal::entityDefinitionUpdateManager()
      ->installEntityType(\Drupal::entityTypeManager()->getDefinition('shopify_vendor'));
  return t('shopify vendor entity created');
}

/**
 * Adds "shopify_vendor.status"
 */
function neg_shopify_update_8714(&$sandbox) {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $entity_type = $definition_update_manager->getEntityType('shopify_vendor');
  $last_installed_schema_repository = \Drupal::service('entity.last_installed_schema.repository');
  $field_storage_definitions = $last_installed_schema_repository->getLastInstalledFieldStorageDefinitions('shopify_vendor');

  $field_storage_definitions['status'] = BaseFieldDefinition::create('boolean')
    ->setName('status')
    ->setTargetEntityTypeId('shopify_vendor')
    ->setTargetBundle(NULL)
    ->setLabel(t('Published'))
    ->setDefaultValue(TRUE)
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'settings' => [
        'display_label' => TRUE,
      ],
      'weight' => -10,
    ])
    ->setDisplayConfigurable('form', TRUE);

  $definition_update_manager->updateFieldableEntityType($entity_type, $field_storage_definitions, $sandbox);

  return t('shopify_vendor.status');
}

/**
 * Adds "shopify_vendor.thumbnail"
 */
function neg_shopify_update_8715(&$sandbox) {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $entity_type = $definition_update_manager->getEntityType('shopify_vendor');
  $last_installed_schema_repository = \Drupal::service('entity.last_installed_schema.repository');
  $field_storage_definitions = $last_installed_schema_repository->getLastInstalledFieldStorageDefinitions('shopify_vendor');

  $field_storage_definitions['thumbnail'] = BaseFieldDefinition::create('image')
    ->setName('thumbnail')
    ->setTargetEntityTypeId('shopify_vendor')
    ->setTargetBundle(NULL)
    ->setLabel(t('Thumbnail Image'))
    ->setDefaultValue('')
    ->setDisplayOptions('view', [
      'label' => 'hidden',
      'type' => 'image',
      'weight' => -40,
      'settings' => ['image_style' => '', 'image_link' => 'content'],
    ])
    ->setDisplayOptions('form', [
      'type' => 'image_image',
      'weight' => 2,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->updateFieldableEntityType($entity_type, $field_storage_definitions, $sandbox);

  return t('shopify_vendor.thumbnail');
}
